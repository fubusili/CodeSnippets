<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDECodeSnippetCompletionPrefix</key>
	<string>x_request_list_swift</string>
	<key>IDECodeSnippetCompletionScopes</key>
	<array>
		<string>All</string>
	</array>
	<key>IDECodeSnippetContents</key>
	<string>extension TGConnectionRecommendList {
    private func requestList(_ isShowLoading: Bool = false,
                             isLoadMore: Bool = false,
                             completion: requestCompletionHandle? = nil) {
        if isShowLoading, !isShowSomo {
            self.view.showInteractiveHud()
        }
        var begin: Int = 0
        var end: Int = 20
        if isLoadMore {
            begin = listCount
            end += begin
        }
        self.requestDataList(begin, end: end) { listModel, errMsg in
            self.view.hideHud()
            self.request = nil
            self.isShowSomo = false
            if let msg = errMsg, msg.count &gt; 0  {
                self.view?.showError(msg, afterDelay: 1.5)
            }
            else if let model = listModel as? TGSubscriptionListModel {
                self.listModel = model
                if !isLoadMore {
                    self.list.removeAll()
                }
                if let list = model.list, list.count &gt; 0 {
                    self.list.append(contentsOf: list)
                }
            }
            self.updateErrViewStatus(errMsg != nil)
            DispatchQueue.main.after(1) {
                self.tableView.reloadData()
                self.updateRefresh()
            }
        }
    }

    private func requestDataList(_ begin: Int, 
                         end: Int, 
                         completion: TGSimpleRequestCallback?) {
        self.request?.cancel()
        let params: [String: Any] = ["begin": begin, "end": end]
        self.request = TGNetworkManager.shareInstnace().request(with: .get, urlString: "/mobile-api/human/recommendation/search", parameters: params, headerParams: nil, successBlock: { (obj) in
            let model = TGConnectionRecommendListModel.yy_model(withJSON: obj)
            completion?(model, nil)
        }, failureBlock: { _, statusCode, errInfo in
            let errMsg: String = TGNetworkErrorBaseHandler.getFinalErrMessage(withStatusCode: errInfo != nil ? Int32(errInfo!.err) : statusCode, networkErrorInfo: errInfo)
            completion?(nil, errMsg)
        })
    }
}</string>
	<key>IDECodeSnippetIdentifier</key>
	<string>21D51708-2808-4654-98C3-347E8BD38C6F</string>
	<key>IDECodeSnippetLanguage</key>
	<string>Xcode.SourceCodeLanguage.Swift</string>
	<key>IDECodeSnippetSummary</key>
	<string></string>
	<key>IDECodeSnippetTitle</key>
	<string>request list swift</string>
	<key>IDECodeSnippetUserSnippet</key>
	<true/>
	<key>IDECodeSnippetVersion</key>
	<integer>2</integer>
</dict>
</plist>
