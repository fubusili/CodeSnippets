<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDECodeSnippetCompletionPrefix</key>
	<string>x_time_picker</string>
	<key>IDECodeSnippetCompletionScopes</key>
	<array>
		<string>All</string>
	</array>
	<key>IDECodeSnippetContents</key>
	<string>public func selectTime(_ model: TGFilterTimeViewModel?, isBeginTime: Bool) {
        guard model != nil else {
            return
        }
        let dateView = TGDateSelectView(frame: UIScreen.main.bounds)
        dateView.isHiddenClearBtn = true
        dateView.title = isBeginTime ? "选择开始时间" : "选择结束时间"
        if model!.endValue != nil {
            let timeInterval = Double(model!.endValue!)/1000
            let date = NSDate(timeIntervalSince1970: timeInterval) as Date
            if isBeginTime {
                dateView.maxDate = date
            }
            else {
                dateView.currentDate = date
            }
        }
        if model!.beginValue != nil {
            let timeInterval = Double(model!.beginValue!)/1000
            let date = Date(timeIntervalSince1970: timeInterval)
            if isBeginTime {
                dateView.currentDate = date
            }
            else {
                dateView.minDate = date
            }
        }
        dateView.dateSelectHandler = {[weak self] (selectDateStr, _) in
            guard let dateStr = selectDateStr else {
                return
            }
            guard let strongSelf = self else {
                return
            }
            guard let model = strongSelf.getCellModel() else {
                return
            }
            let date = NSDate(time: dateStr, formatString: "yyyy-MM-dd")
            if isBeginTime {
                model.beginValue = Int64(date.timeIntervalSince1970 * 1000)
            }
            else {
                model.endValue = Int64(date.timeIntervalSince1970 * 1000) + Int64(24*3600 * 1000) - 1
            }
            strongSelf.reloadSelectTimeControl()
            strongSelf.clearBtnSelectedState()
            if isBeginTime &amp;&amp; model.endValue == nil {
                DispatchQueue.main.after(0.2) {[weak self] in
                    guard let strongSelf = self else {
                        return
                    }
                    strongSelf.selectTime(model, isBeginTime: false)
                }
            }
            model.selectedIndex = nil
        }
        dateView.updateStyle(UIFont.systemFont(ofSize: 18, weight: .medium), titleColor: UIColor.tg_defaultLabel(withAlpha: 1), btnColor: UIColor.tg_defaultLabel(withAlpha: 0.85))
        dateView.updateTopCornerRadius(16)
        UIApplication.shared.keyWindow?.addSubview(dateView)
        dateView.show(withAnimationDuration: 0.25)
    }</string>
	<key>IDECodeSnippetIdentifier</key>
	<string>2CC05399-4581-45A9-8AFE-0821E33CDC50</string>
	<key>IDECodeSnippetLanguage</key>
	<string>Xcode.SourceCodeLanguage.Swift</string>
	<key>IDECodeSnippetSummary</key>
	<string></string>
	<key>IDECodeSnippetTitle</key>
	<string>time picker</string>
	<key>IDECodeSnippetUserSnippet</key>
	<true/>
	<key>IDECodeSnippetVersion</key>
	<integer>2</integer>
</dict>
</plist>
